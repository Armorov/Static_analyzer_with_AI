
prompt_lang_setting = {
    "kotlin": {
                'FUNC': """
                    Ты анализируешь функцию написанную на языке программирования Kotlin.
                    Твоя задача выделить:
                    CLASS_NAME - имя класса или структуры, которой принадлежит рассматриваемый метод или функция, иначе None
                    FUNC_NAME - имя анализируемой функции или метода
                    ARG_LIST- список аргументов которы рассматриваемая функция или метод принимает вида 
                                {
                                    'NAME': имя аргумента, 
                                    'TYPE': тип аргумента
                                } 
                    CALL_LIST - список имен вызовов в теле этой функции вида 
                                {
                                    'NAME': имя вызываемой функции или метода, 
                                    'CLASS': имя класса или структуры, к которой принадлежит метод, иначе None, 
                                    'ARGS': список объектов вида 
                                        {
                                            "NAME": имя объекта, передаваемого в функцию, 
                                            "TYPE": тип объекта, если он был определен, иначе None
                                        }
                                }
                    Сохрани результат используя функцию save_func, которая принимает на вход три словаря.
                    """,
                'CLASS': """
                    Ты анализируешь классы и интерфейсы написанные на языке программирования Kotlin.
                    Твоя задача составить список словарей описывающий функции, реализованные в классе или интерфейсе:
                    [
                        {
                            CLASS_NAME - имя класса или структуры, которой принадлежит рассматриваемый метод или функция, иначе None
                            FUNC_NAME - имя анализируемой функции или метода
                            ARG_LIST- список аргументов которы рассматриваемая функция или метод принимает вида 
                                        {
                                            'NAME': имя аргумента, 
                                            'TYPE': тип аргумента
                                        } 
                            CALL_LIST - список имен вызовов в теле этой функции вида 
                                        {
                                            'NAME': имя вызываемой функции или метода, 
                                            'CLASS': имя класса или структуры, к которой принадлежит метод, иначе None, 
                                            'ARGS': список объектов вида 
                                                {
                                                    "NAME": имя объекта, передаваемого в функцию, 
                                                    "TYPE": тип объекта, если он был определен, иначе None
                                                }
                                        }
                        }
                    ]
                    Сохрани результат используя функцию save_class, которая принимает в качестве аргумента список словарей.
                    """,
                'SOURCE':"""
                    Ты анализируешь код программы написанный на языке Kotlin.
                    Твоя задача составить описание программы ввиде словаря Dict и сохранить результат функцией save_source:
                    {
                        IMPORTS - список имен импортируемых библиотек виде List[str], иначе None
                        FUNCS: список словарей, описывающий функции и методы реализованные в файле List[Dict] следующего вида:
                        [
                            {
                                CLASS_NAME - имя класса или структуры, которой принадлежит рассматриваемый метод или функция, иначе None
                                FUNC_NAME - имя анализируемой функции или метода
                                START_POINT - номер строки на которой начинается анализируемая функция или метод
                                END_POINT - номер строки на которой заканчивается анализируемая функция или метод
                                ARG_LIST- список аргументов которы рассматриваемая функция или метод принимает вида, иначе None
                                            {
                                                'NAME': имя аргумента, 
                                                'TYPE': тип аргумента
                                            } 
                                CALL_LIST - список имен вызовов в теле этой функции или метода вида, иначе None
                                            {
                                                'NAME': имя вызываемой функции или метода, 
                                                'CLASS': имя класса или структуры, к которой принадлежит метод, иначе None, 
                                                'ARGS': список объектов, которые передаются в вызываемую функцию или метод вида, иначе None
                                                    {
                                                        "NAME": имя объекта, передаваемого в функцию, 
                                                        "TYPE": тип объекта, если он был определен, иначе None
                                                    }
                                            }
                            },
                        ]
                    }
                    """
               },
    "c": {},
}
